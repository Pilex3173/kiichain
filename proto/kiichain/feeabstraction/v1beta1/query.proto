syntax = "proto3";
package kiichain.feeabstraction.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "kiichain/feeabstraction/v1beta1/params.proto";

option go_package = "github.com/kiichain/kiichain/x/feeabstraction/types";

// Query defines the gRPC querier service
service Query {
  // Params defines a gRPC query method that returns the fee abstraction params
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/kiichain/feeabstraction/v1beta1/params";
  }
  // GetFeeTokens defines a gRPC query method that returns the fee tokens
  rpc GetFeeTokens(QueryGetFeeTokensRequest)
      returns (QueryGetFeeTokensResponse) {
    option (google.api.http).get =
        "/kiichain/feeabstraction/v1beta1/fee_tokens";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryGetFeeTokensRequest is the request type for the Query/GetFeeTokens RPC
// method
message QueryGetFeeTokensRequest {}

// QueryGetFeeTokensResponse is the response type for the Query/GetFeeTokens RPC
// method
message QueryGetFeeTokensResponse {
  // fee_tokens defines the fee tokens registered in the module.
  FeeTokenMetadataCollection fee_tokens = 1;
}